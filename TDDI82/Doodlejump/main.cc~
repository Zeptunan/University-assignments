#include <SFML/Graphics.hpp>
#include "player.h"
#include "platform.h"
#include "entity.h"
#include "world.h"
#include "Menu.h"

#include <vector>
#include <iostream>

enum GameState { MENU, GAME, GAME_OVER };

int main()
{
    sf::RenderWindow window(sf::VideoMode(640, 960), "Doodle Jump");
    window.setFramerateLimit(60);

    
    sf::Texture background;
    background.loadFromFile("resources/background.png");
    sf::Sprite backgroundSprite;
    backgroundSprite.setTexture(background);

    // Loada font
    sf::Font font;
    font.loadFromFile("resources/comic_sans.ttf");
    if (!font.loadFromFile("resources/comic_sans.ttf")) {
        std::cerr << "Error loading font\n";
        return -1;
    }

    //Menu items
    std::vector<MenuItem> menuItems;
    menuItems.push_back(MenuItem("Play", font, 150, sf::Vector2f(200, 300)));
    menuItems.push_back(MenuItem("Exit", font, 150, sf::Vector2f(200, 600)));

    sf::Text gameOverText("GAME OVER", font, 50);
    gameOverText.setFillColor(sf::Color::Red);
    gameOverText.setPosition(200, 200);

    std::vector<MenuItem> gameOverItems;
    gameOverItems.push_back(MenuItem("Retry", font, 150, sf::Vector2f(200, 300)));
    gameOverItems.push_back(MenuItem("Exit", font, 150, sf::Vector2f(200, 600)));

    GameState state = MENU;
    World world;

    while (window.isOpen())
      {
        sf::Event event;
        while (window.pollEvent(event))
	  {
            if (event.type == sf::Event::Closed) {
	      window.close();
            }

	    if (state == MENU) {
	      if (event.type == sf::Event::MouseButtonPressed) {
		sf::Vector2f mousePos = window.mapPixelToCoords(sf::Mouse::getPosition(window));
		if (menuItems[0].isClicked(mousePos)) {
		  state = GAME;
                       
		} else if (menuItems[1].isClicked(mousePos)) {
		  window.close();
		}
	      }
            } else if (state == GAME_OVER) {
	      if (event.type == sf::Event::MouseButtonPressed) {
		sf::Vector2f mousePos = window.mapPixelToCoords(sf::Mouse::getPosition(window));
		if (gameOverItems[0].isClicked(mousePos)) {
		  state = GAME;
		  // Smidigaste lösningen vad jag vet
		  world = World();  
		} else if (gameOverItems[1].isClicked(mousePos)) {
		  window.close();
		}
	      }
            }
	  }
 
        window.clear(sf::Color::White);
        window.draw(backgroundSprite);
 
        if (state == MENU) {
	  for (auto& item : menuItems) {
	    item.isMouseOver(window.mapPixelToCoords(sf::Mouse::getPosition(window)));
	    item.draw(window);
	  }
        }
        else if (state == GAME) {
	  world.update();
          
           
	  world.draw(window);
	  world.testCollision();

	  if (!world.playerAlive()) {
	    state = GAME_OVER;
	  }
        } else if (state == GAME_OVER) {
	  window.draw(gameOverText);
	  for (auto &item : gameOverItems) {
	    item.isMouseOver(window.mapPixelToCoords(sf::Mouse::getPosition(window)));
	    item.draw(window);
	  }
        }
   
	  
        window.display();
      }

    return 0;
    //bruh
}
//kodinnlämning
